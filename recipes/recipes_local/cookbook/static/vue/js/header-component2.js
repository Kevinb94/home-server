"use strict";(self["webpackChunktandoor"]=self["webpackChunktandoor"]||[]).push([[2460],{77786:function(t,e,a){a.d(e,{s:function(){return s},x:function(){return n}});var s=function(){var t=this,e=t._self._c;return e("b-modal",{attrs:{id:t.modal_id,size:"lg",title:t.modal_title,"hide-footer":"","aria-label":""},on:{show:t.showModal}},[e("h5",[t._v(t._s(t.$t("Meal_Types")))]),e("div",[e("div",t._l(t.AutoPlan.meal_types,(function(a,s){return e("b-card",{key:a.id,staticClass:"mt-1 p-2",attrs:{"no-body":""}},[e("b-card-header",{staticClass:"p-2 border-0"},[e("div",{staticClass:"row"},[e("div",{staticClass:"col-10"},[e("h5",{staticClass:"mt-1 mb-1"},[t._v(" "+t._s(a.icon)+" "+t._s(a.name)+" ")])])]),e("div",{staticClass:"col-12"},[e("generic-multiselect",{attrs:{initial_selection:t.AutoPlan.keywords[a],parent_variable:`${s}`,model:t.Models.KEYWORD,placeholder:t.$t("Keywords, leave blank to exclude meal type"),limit:50},on:{change:t.genericSelectChanged}})],1)])],1)})),1),e("div",{staticClass:"row-cols-1 m-3"},[e("b-form-input",{staticClass:"w-25 m-2 mb-0",attrs:{type:"number"},model:{value:t.AutoPlan.servings,callback:function(e){t.$set(t.AutoPlan,"servings",e)},expression:"AutoPlan.servings"}}),e("small",{staticClass:"m-2 mt-0 form-text text-muted",attrs:{tabindex:"-1"}},[t._v(t._s(t.$t("Servings")))])],1),e("b-form-group",{staticClass:"mt-3"},[e("generic-multiselect",{staticStyle:{"flex-grow":"1","flex-shrink":"1","flex-basis":"0"},attrs:{required:"",parent_variable:"entryEditing.shared",label:"display_name",model:t.Models.USER_NAME,placeholder:t.$t("Share"),limit:10,multiple:!0,initial_selection:t.AutoPlan.shared},on:{change:function(e){t.AutoPlan.shared=e.val}}}),e("small",{staticClass:"form-text text-muted",attrs:{tabindex:"-1"}},[t._v(t._s(t.$t("Share")))])],1),t.autoMealPlan?t._e():e("b-input-group",[e("b-form-checkbox",{attrs:{id:"AddToShopping"},model:{value:t.mealplan_settings.addshopping,callback:function(e){t.$set(t.mealplan_settings,"addshopping",e)},expression:"mealplan_settings.addshopping"}}),e("small",{staticClass:"form-text text-muted",attrs:{tabindex:"-1"}},[t._v(t._s(t.$t("AddToShopping")))])],1),e("div",{},[e("div",{staticClass:"row m-3 mb-0"},[e("b-form-datepicker",{staticClass:"col",attrs:{"value-as-date":!0},model:{value:t.AutoPlan.startDay,callback:function(e){t.$set(t.AutoPlan,"startDay",e)},expression:"AutoPlan.startDay"}}),e("div",{staticClass:"col"}),e("b-form-datepicker",{staticClass:"col",attrs:{"value-as-date":!0},model:{value:t.AutoPlan.endDay,callback:function(e){t.$set(t.AutoPlan,"endDay",e)},expression:"AutoPlan.endDay"}})],1),e("div",{staticClass:"row align-top m-3 mt-0"},[e("small",{staticClass:"col align-text-top text-muted",attrs:{tabindex:"-1"}},[t._v(t._s(t.$t("Start Day")))]),e("div",{staticClass:"col"}),e("small",{staticClass:"col align-self-end text-muted",attrs:{tabindex:"-1"}},[t._v(t._s(t.$t("End Day")))])])])],1),e("div",{staticClass:"row mt-3 mb-3"},[e("div",{staticClass:"col-12"},[e("b-button",{staticClass:"float-right",attrs:{variant:"primary",disabled:t.loading},on:{click:t.createPlan}},[t.loading?e("b-spinner",{attrs:{small:""}}):t._e(),t._v(" "+t._s(t.$t("Create Meal Plan"))+" ")],1),e("b-button",{attrs:{variant:"danger"},on:{click:t.exitPlan}},[t._v(t._s(t.$t("Exit")))])],1)])])},n=[]},15782:function(t,e,a){a.d(e,{I:function(){return d}});a(57658);var s=a(6955),n=a(49665),i=a(96086),l=a(70538);const r="meal_plan_store",o="MEAL_PLAN_CLIENT_SETTINGS",d=(0,i.Q_)(r,{state:()=>({plans:{},currently_updating:null,settings:null}),getters:{plan_list:function(){let t=[];for(let e in this.plans)t.push(this.plans[e]);return t},empty_meal_plan:function(){return{from_date:null,to_date:null,id:-1,meal_type:null,note:"",note_markdown:"",recipe:null,servings:1,shared:[],title:"",title_placeholder:"Title"}},client_settings:function(){return null===this.settings&&(this.settings=this.loadClientSettings()),this.settings}},actions:{refreshFromAPI(t,e){if(null==this.currently_updating||this.currently_updating[0]!==t||this.currently_updating[1]!==e){this.currently_updating=[t,e];let a=new s.ApiApiFactory;a.listMealPlans(t,e).then((t=>{t.data.forEach((t=>{l["default"].set(this.plans,t.id,t)})),this.currently_updating=null}))}},createObject(t){let e=new s.ApiApiFactory;return e.createMealPlan(t).then((t=>(l["default"].set(this.plans,t.data.id,t.data),t))).catch((t=>{n.StandardToasts.makeStandardToast(this,n.StandardToasts.FAIL_CREATE,t)}))},updateObject(t){let e=new s.ApiApiFactory;return e.updateMealPlan(t.id,t).then((e=>{l["default"].set(this.plans,t.id,t)})).catch((t=>{n.StandardToasts.makeStandardToast(this,n.StandardToasts.FAIL_UPDATE,t)}))},deleteObject(t){let e=new s.ApiApiFactory;return e.destroyMealPlan(t.id).then((e=>{l["default"].delete(this.plans,t.id)})).catch((t=>{n.StandardToasts.makeStandardToast(this,n.StandardToasts.FAIL_DELETE,t)}))},updateClientSettings(t){this.settings=t,localStorage.setItem(o,JSON.stringify(this.settings))},loadClientSettings(){let t=localStorage.getItem(o);return null===t?{displayPeriodUom:"week",displayPeriodCount:3,startingDayOfWeek:1,displayWeekNumbers:!0}:JSON.parse(t)}}})},81185:function(t,e,a){a.d(e,{R:function(){return h}});var s=a(96086),n=a(6955),i=a(70538),l=a(49665);const r=3e4,o="user_preference_store",d="TANDOOR_LOCAL_SETTINGS",u="TANDOOR_USER_SETTINGS",c=localStorage.getItem("USER_ID"),h=(0,s.Q_)(o,{state:()=>({data:null,updated_at:null,currently_updating:!1,user_settings_loaded_at:new Date(0),user_settings:{image:null,theme:"TANDOOR",nav_bg_color:"#ddbf86",nav_text_color:"DARK",nav_show_logo:!0,default_unit:"g",default_page:"SEARCH",use_fractions:!1,use_kj:!1,plan_share:[],nav_sticky:!0,ingredient_decimals:2,comments:!0,shopping_auto_sync:5,mealplan_autoadd_shopping:!1,food_inherit_default:[],default_delay:"4.0000",mealplan_autoinclude_related:!0,mealplan_autoexclude_onhand:!0,shopping_share:[],shopping_recent_days:7,csv_delim:",",csv_prefix:"",filter_to_supermarket:!1,shopping_add_onhand:!1,left_handed:!1,show_step_ingredients:!0,food_children_exist:!1,locally_updated_at:new Date(0)},device_settings_initialized:!1,device_settings_loaded_at:new Date(0),device_settings:{shopping_show_checked_entries:!1,shopping_show_delayed_entries:!1,shopping_show_selected_supermarket_only:!1,shopping_selected_grouping:"food.supermarket_category.name",shopping_selected_supermarket:null,shopping_item_info_created_by:!1,shopping_item_info_mealplan:!1,shopping_item_info_recipe:!0}}),getters:{},actions:{loadDeviceSettings(){let t=localStorage.getItem(d);if(null!==t){let e=JSON.parse(t);for(t in e)i["default"].set(this.device_settings,t,e[t])}this.device_settings_initialized=!0},updateDeviceSettings:function(){localStorage.setItem(d,JSON.stringify(this.device_settings))},loadUserSettings:function(t){let e=localStorage.getItem(u);if(null!==e){let t=JSON.parse(e);for(e in t)i["default"].set(this.user_settings,e,t[e]);console.log(`loaded local user settings age ${((new Date).getTime()-this.user_settings.locally_updated_at)/1e3} `)}if((new Date).getTime()-this.user_settings.locally_updated_at>r||!t){console.log("refreshing user settings from API");let t=new n.ApiApiFactory;t.retrieveUserPreference(localStorage.getItem("USER_ID")).then((t=>{for(e in t.data)e in this.user_settings||"user"===e?i["default"].set(this.user_settings,e,t.data[e]):console.error(`API returned UserPreference key "${e}" which has no default in UserPreferenceStore.user_settings.`);i["default"].set(this.user_settings,"locally_updated_at",(new Date).getTime()),localStorage.setItem(u,JSON.stringify(this.user_settings))})).catch((t=>{this.currently_updating=!1}))}},updateUserSettings:function(){let t=new n.ApiApiFactory;t.partialUpdateUserPreference(c,this.user_settings).then((t=>{this.user_settings=t.data,i["default"].set(this.user_settings,"locally_updated_at",(new Date).getTime()),localStorage.setItem(u,JSON.stringify(this.user_settings)),l.StandardToasts.makeStandardToast(this,l.StandardToasts.SUCCESS_UPDATE)})).catch((t=>{this.currently_updating=!1,l.StandardToasts.makeStandardToast(this,l.StandardToasts.FAIL_UPDATE,t)}))},getData:function(){return this.isStaleOrEmpty?this.refreshFromAPI():this.data},getStaleData:function(){return this.data},isStale(){return null===this.updated_at||new Date-this.updated_at>r},isEmpty(){return null===this.data},isStaleOrEmpty(){return this.isStale()||this.isEmpty()},updateIfStaleOrEmpty(){if(this.isStaleOrEmpty)return this.refreshFromAPI()},refreshFromAPI(){let t=new n.ApiApiFactory;if(!this.currently_updating)return this.currently_updating=!0,t.retrieveUserPreference(localStorage.getItem("USER_ID")).then((t=>(this.data=t.data,this.updated_at=new Date,this.currently_updating=!1,this.user_settings=t.data,this.user_settings_loaded_at=new Date,this.data))).catch((t=>{this.currently_updating=!1}))}}})},86728:function(t,e,a){a.r(e);var s=a(77786),n=a(11205),i=a(1001),l=(0,i.Z)(n.Z,s.s,s.x,!1,null,"979dd798",null);e["default"]=l.exports},11205:function(t,e,a){var s=a(18283);e.Z=s.Z},18283:function(t,e,a){a(57658);var s=a(70538),n=a(12120),i=a(26678),l=a(49665),r=a(81185),o=a(66123),d=a.n(o),u=a(30381),c=a.n(u),h=a(15782);const{ApiApiFactory:_}=a(6955),{StandardToasts:p}=a(49665);s["default"].use(n.XG7),s["default"].use(d());let g="mealplan_settings";e.Z={name:"AutoMealPlanModal",components:{GenericMultiselect:i["default"]},props:{modal_title:String,modal_id:{type:String,default:"autoplan-modal"},current_period:Object},mixins:[l.ApiMixin],data(){return{AutoPlan:{meal_types:[],keywords:[[]],servings:1,date:Date.now(),startDay:null,endDay:null,shared:[],addshopping:!1},mealplan_settings:{addshopping:!1},loading:!1}},watch:{mealplan_settings:{handler(t){this.$cookies.set(g,this.mealplan_settings)},deep:!0}},mounted:function(){(0,r.R)().updateIfStaleOrEmpty()},computed:{autoMealPlan:function(){return(0,r.R)().getStaleData()?.mealplan_autoadd_shopping}},methods:{genericSelectChanged:function(t){this.AutoPlan.keywords[t.var]=t.val},showModal(){this.$cookies.isKey(g)&&(this.mealplan_settings=Object.assign({},this.mealplan_settings,this.$cookies.get(g))),this.refreshMealTypes(),this.AutoPlan.servings=1,this.AutoPlan.startDay=new Date,this.AutoPlan.endDay=this.current_period.periodEnd,(0,r.R)().getData().then((t=>{this.AutoPlan.shared=t.plan_share})),this.AutoPlan.addshopping=this.mealplan_settings.addshopping,this.loading=!1},sortMealTypes(){this.meal_types.forEach((function(t,e){t.order=e}));let t=0;this.meal_types.forEach((e=>{let a=new _;a.updateMealType(this.AutoPlan.meal_type,e).then((e=>{t===this.meal_types.length-1?this.periodChangedCallback(this.current_period):t++})).catch((t=>{p.makeStandardToast(this,p.FAIL_UPDATE,t)}))}))},refreshMealTypes(){let t=new _;Promise.resolve(t.listMealTypes().then((t=>{t.data.forEach((t=>{t.editing=!1})),this.AutoPlan.meal_types=t.data}))).then((()=>{let t=this.AutoPlan.meal_types;for(let e=0;e<t.length;e++)this.AutoPlan.keywords[e]=[]}))},createPlan(){if(!this.loading){this.loading=!0;let t=[];for(let e=0;e<this.AutoPlan.meal_types.length;e++)0!==this.AutoPlan.keywords[e].length&&t.push(this.autoPlanThread(this.AutoPlan,e));Promise.allSettled(t).then((t=>{this.refreshEntries(),this.loading=!1,this.$bvModal.hide("autoplan-modal")})).catch((t=>{p.makeStandardToast(this,p.FAIL_CREATE,t),this.loading=!1}))}},async autoPlanThread(t,e){let a=new _,s=[];for(const i in t.keywords[e]){let a=t.keywords[e][i];s.push(a.id)}let n={start_date:c()(t.startDay).format("YYYY-MM-DD"),end_date:c()(t.endDay).format("YYYY-MM-DD"),meal_type_id:t.meal_types[e].id,keyword_ids:s,servings:t.servings,shared:t.shared,addshopping:t.addshopping};return a.createAutoPlanViewSet(n)},refreshEntries(){let t=this.current_period;(0,h.I)().refreshFromAPI(c()(t.periodStart).format("YYYY-MM-DD"),c()(t.periodEnd).format("YYYY-MM-DD"))},exitPlan(){this.$bvModal.hide("autoplan-modal")}}}}}]);