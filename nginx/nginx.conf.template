worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # HTTP block to redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name ${DOMAIN};

        location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS block to serve Trilium and Calibre-Web over HTTPS
    server {
        listen 443 ssl;
        server_name ${DOMAIN};

        # Paths to your SSL certificates
        ssl_certificate /etc/nginx/ssl/${DOMAIN}.crt;
        ssl_certificate_key /etc/nginx/ssl/${DOMAIN}.key;

        # Optional SSL settings for better security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Proxy /trilium to the Trilium service
        location / {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_redirect off;
                proxy_set_header        X-Forwarded-Proto $scheme;
                proxy_read_timeout 86400;
                proxy_pass http://trilium:${TRILIUM_PORT};
                add_header   Front-End-Https   on;
        }


        # Proxy /calibre-web to the Calibre-Web service
        location /calibre-web {
            proxy_bind $server_addr;
            proxy_pass http://calibre-web:${CALIBRE_WEB_PORT};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Script-Name /calibre-web;
            client_max_body_size 100M;
        }

        # Proxy /portainer to the Portainer service
        location /portainer/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://portainer:${PORTAINER_PORT}/;
            proxy_redirect off;
        }
    }
}
