version: '3.8'

services:

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt  # Store the Let's Encrypt folder
      - certbot-www:/var/www/certbot  # For webroot challenge
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew --webroot -w /var/www/certbot --quiet --deploy-hook "nginx -s reload"; done;'
  
  nginx:
    build: ./nginx  # Path to the NGINX Dockerfile directory
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env  # Load all environment variables from the .env file
    networks:
      - internal
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - certbot-etc:/etc/letsencrypt  # Share the Let's Encrypt folder with Nginx
      - certbot-www:/var/www/certbot  # For webroot challenge
    depends_on:
      - trilium
      - calibre-web
      - certbot

  trilium:
    image: zadam/trilium:latest
    environment:
      - TRILIUM_DATA_DIR=/home/node/trilium-data
      - NODE_TLS_REJECT_UNAUTHORIZED=0 
    volumes:
      - ${TRILIUM_DATA_DIR:-~/trilium-data}:/home/node/trilium-data
    networks:
      - internal


  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - ./calibre/data:/config
      - ./calibre/library:/books
    networks:
      - internal
    restart: unless-stopped


  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Access Docker
      - portainer_data:/data  # Persist Portainer data
    networks:
      - internal  # Use the same network


  db_recipes:
    restart: always
    image: postgres:16-alpine
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - internal  # Use the same network

  web_recipes:
    restart: always
    image: vabene1111/recipes
    env_file:
      - ./.env
    volumes:
      - recipes_staticfiles:/opt/recipes/staticfiles
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - recipes_nginx_config:/opt/recipes/nginx/conf.d
      - ./mediafiles:/opt/recipes/mediafiles
    depends_on:
      - db_recipes
    networks:
      - internal  # Use the same network

volumes:
  trilium:
  portainer_data:
  certbot-etc:
  certbot-www:
  recipes_nginx_config:
  recipes_staticfiles:
networks:
  internal:
    driver: bridge
